#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: OpenDataSoft 4.0
paths:
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      produces:
      - text/plain
      - application/json
      operationId: login
      responses:
        '200':
          description: Successful login
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      parameters:
      - in: query
        name: _output
        description: Optional output format
        type: string
        required: false
        enum:
        - json
        - oauth2
        - token
      tags:
      - session
  /rest/ODSAPIAgroSolsBretagne/{row_id}:
    post:
      summary: Create a new ODSAPIAgroSolsBretagnebusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odsapiagrosolsbretagne-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/ODSAPIAgroSolsBretagne'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/ODSAPIAgroSolsBretagne'
        in: body
        name: body
      tags:
      - ODSAPIAgroSolsBretagne
      consumes:
      - application/json
    get:
      summary: Get a ODSAPIAgroSolsBretagne business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odsapiagrosolsbretagne-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/ODSAPIAgroSolsBretagne'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - ODSAPIAgroSolsBretagne
    delete:
      summary: Delete a ODSAPIAgroSolsBretagne business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odsapiagrosolsbretagne-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - ODSAPIAgroSolsBretagne
    put:
      summary: Update a ODSAPIAgroSolsBretagnebusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odsapiagrosolsbretagne-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/ODSAPIAgroSolsBretagne'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/ODSAPIAgroSolsBretagne'
        in: body
        name: body
      tags:
      - ODSAPIAgroSolsBretagne
      consumes:
      - application/json
  /rest/ODSArbreRemarquable/{row_id}:
    post:
      summary: Create a new ODSArbreRemarquablebusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odsarbreremarquable-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/ODSArbreRemarquable'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/ODSArbreRemarquable'
        in: body
        name: body
      tags:
      - ODSArbreRemarquable
      consumes:
      - application/json
    get:
      summary: Get a ODSArbreRemarquable business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odsarbreremarquable-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/ODSArbreRemarquable'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - ODSArbreRemarquable
    delete:
      summary: Delete a ODSArbreRemarquable business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odsarbreremarquable-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - ODSArbreRemarquable
    put:
      summary: Update a ODSArbreRemarquablebusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odsarbreremarquable-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/ODSArbreRemarquable'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/ODSArbreRemarquable'
        in: body
        name: body
      tags:
      - ODSArbreRemarquable
      consumes:
      - application/json
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: logout
      responses:
        '200':
          description: Successfull logout
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      tags:
      - session
  /rest/ODSHotspotParisWifi/{row_id}:
    post:
      summary: Create a new ODSHotspotParisWifibusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odshotspotpariswifi-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/ODSHotspotParisWifi'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/ODSHotspotParisWifi'
        in: body
        name: body
      tags:
      - ODSHotspotParisWifi
      consumes:
      - application/json
    get:
      summary: Get a ODSHotspotParisWifi business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odshotspotpariswifi-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/ODSHotspotParisWifi'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - ODSHotspotParisWifi
    delete:
      summary: Delete a ODSHotspotParisWifi business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odshotspotpariswifi-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - ODSHotspotParisWifi
    put:
      summary: Update a ODSHotspotParisWifibusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odshotspotpariswifi-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/ODSHotspotParisWifi'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/ODSHotspotParisWifi'
        in: body
        name: body
      tags:
      - ODSHotspotParisWifi
      consumes:
      - application/json
  /rest/ODSHotspotParisWifi:
    get:
      summary: Search ODSHotspotParisWifi business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odshotspotpariswifi-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfODSHotspotParisWifi'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: nom_site
        description: Search filter for Nom site
        type: string
        required: false
      - in: query
        name: adresse
        description: Search filter for Adresse
        type: string
        required: false
      - in: query
        name: cp
        description: Search filter for CP
        type: string
        required: false
      - in: query
        name: ville
        description: Search filter for VILLE
        type: string
        required: false
      - in: query
        name: adresse_complete
        description: Search filter for Adresse complète
        type: string
        required: false
      tags:
      - ODSHotspotParisWifi
  /rest/ODSArbreRemarquable:
    get:
      summary: Search ODSArbreRemarquable business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odsarbreremarquable-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfODSArbreRemarquable'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: geom_x_y
        description: Search filter for Geo point
        type: string
        required: false
      - in: query
        name: genre
        description: Search filter for GENRE
        type: string
        required: false
      - in: query
        name: espece
        description: Search filter for ESPECE
        type: string
        required: false
      - in: query
        name: adresse
        description: Search filter for ADRESSE
        type: string
        required: false
      - in: query
        name: idbase
        description: Search filter for IDBASE
        type: number
        required: false
      - in: query
        name: typeemplacement
        description: Search filter for TYPEEMPLACEMENT
        type: string
        required: false
      - in: query
        name: domanialite
        description: Search filter for DOMANIALITE
        type: string
        required: false
      - in: query
        name: arrondissement
        description: Search filter for ARRONDISSEMENT
        type: string
        required: false
      - in: query
        name: complementadresse
        description: Search filter for COMPLEMENTADRESSE
        type: string
        required: false
      - in: query
        name: numero
        description: Search filter for NUMERO
        type: string
        required: false
      - in: query
        name: idemplacement
        description: Search filter for IDEMPLACEMENT
        type: string
        required: false
      - in: query
        name: circonferenceencm
        description: Search filter for CIRCONFERENCE EN CM
        type: number
        required: false
      - in: query
        name: hauteurenm
        description: Search filter for HAUTEUR EN M
        type: number
        required: false
      - in: query
        name: stadedeveloppement
        description: Search filter for STADEDEVELOPPEMENT
        type: string
        required: false
      - in: query
        name: pepiniere
        description: Search filter for PEPINIERE
        type: string
        required: false
      - in: query
        name: varieteoucultivar
        description: Search filter for VARIETE OU CULTIVAR
        type: string
        required: false
      - in: query
        name: dateplantation
        description: Search filter for DATEPLANTATION
        type: string
        required: false
      - in: query
        name: remarquable
        description: Search filter for REMARQUABLE
        type: string
        required: false
      - in: query
        name: objectid
        description: Search filter for OBJECTID
        type: integer
        required: false
      - in: query
        name: libellefrancais
        description: Search filter for LIBELLEFRANCAIS
        type: string
        required: false
      tags:
      - ODSArbreRemarquable
  /rest/ODSAPIAgroSolsBretagne:
    get:
      summary: Search ODSAPIAgroSolsBretagne business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-odsapiagrosolsbretagne-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfODSAPIAgroSolsBretagne'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      tags:
      - ODSAPIAgroSolsBretagne
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      parameters:
      - in: query
        name: texts
        description: Texts?
        type: boolean
        required: false
      tags:
      - session
securityDefinitions:
  basicAuth:
    type: basic
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
definitions:
  Error404:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 404
  ArrayOfODSArbreRemarquable:
    type: array
    items:
      $ref: '#/definitions/ODSArbreRemarquable'
  ArrayOfODSAPIAgroSolsBretagne:
    type: array
    items:
      $ref: '#/definitions/ODSAPIAgroSolsBretagne'
  ODSArbreRemarquable:
    type: object
    properties:
      idemplacement:
        description: IDEMPLACEMENT
        type: string
      pepiniere:
        description: PEPINIERE
        type: string
      typeemplacement:
        description: TYPEEMPLACEMENT
        type: string
      numero:
        description: NUMERO
        type: string
      hauteurenm:
        description: HAUTEUR EN M
        type: number
      espece:
        description: ESPECE
        type: string
      arrondissement:
        description: ARRONDISSEMENT
        type: string
      varieteoucultivar:
        description: VARIETE OU CULTIVAR
        type: string
      geom_x_y:
        description: Geo point
        type: string
        example: latitude;longitude
      complementadresse:
        description: COMPLEMENTADRESSE
        type: string
      stadedeveloppement:
        description: STADEDEVELOPPEMENT
        type: string
      idbase:
        description: IDBASE
        type: number
      domanialite:
        description: DOMANIALITE
        type: string
      circonferenceencm:
        description: CIRCONFERENCE EN CM
        type: number
      remarquable:
        description: REMARQUABLE
        type: string
      genre:
        description: GENRE
        type: string
      adresse:
        description: ADRESSE
        type: string
      dateplantation:
        description: DATEPLANTATION
        type: string
        example: yyyy-MM-dd HH:mm:ss
      libellefrancais:
        description: LIBELLEFRANCAIS
        type: string
      row_id:
        description: Unique technical row ID
        type: string
      objectid:
        description: OBJECTID
        type: integer
  PublicationResult:
    type: object
    properties:
      mime:
        description: MIME type
        type: string
      content:
        description: Content (plain text or base64 encoded)
        type: string
  ArrayOfODSHotspotParisWifi:
    type: array
    items:
      $ref: '#/definitions/ODSHotspotParisWifi'
  ActionResult:
    type: object
    properties:
      result:
        description: Action result
        type: string
  ODSHotspotParisWifi:
    type: object
    properties:
      ville:
        description: VILLE
        type: string
      adresse_complete:
        description: Adresse complète
        type: string
      adresse:
        description: Adresse
        type: string
      row_id:
        description: Unique technical row ID
        type: string
      cp:
        description: CP
        type: string
      nom_site:
        description: Nom site
        type: string
  TreeviewData:
    type: object
    properties:
      item:
        description: Object item with lists of linked objects' items
        type: object
  ODSAPIAgroSolsBretagne:
    type: object
    properties:
      row_id:
        description: Unique technical row ID
        type: string
  Error400:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 400
  Error401:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 401
  Error500:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 500
  Error403:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 403
swagger: '2.0'
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module OpenDataSoft
  title: OpenDataSoft
  version: '4.0'
tags:
- name: ODSAPIAgroSolsBretagne
  description: Brittany soil
- name: ODSArbreRemarquable
  description: Remarquable tree Paris
- name: ODSHotspotParisWifi
  description: Paris WiFi hotspot
