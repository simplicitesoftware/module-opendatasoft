#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: OpenDataSoft 5
components:
  schemas:
    Error404:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 404
    ArrayOfOdsJCDecauxBikeStations:
      type: array
      items:
        $ref: '#/components/schemas/OdsJCDecauxBikeStations'
    PublicationResult:
      type: object
      properties:
        mime:
          description: MIME type
          type: string
        content:
          description: Content (plain text or base64 encoded)
          type: string
    PlaceData:
      type: object
      properties:
        coord:
          description: Geographical coordinates
          type: string
        address:
          description: Address
          type: string
        row_id:
          description: Row ID
          type: string
        label1:
          description: 'Label #1'
          type: string
        label2:
          description: 'Label #2'
          type: string
        label3:
          description: 'Label #3'
          type: string
    OdsJCDecauxBikeStations:
      type: object
      properties:
        bike_stands:
          description: Bike Stands
          type: integer
        address:
          description: address
          type: string
        bonus:
          description: bonus
          type: string
        contract_name:
          description: Contract Name
          type: string
        available_bike_stands:
          description: Available Bike Stands
          type: integer
        banking:
          description: banking
          type: string
        number:
          description: number
          type: integer
        available_bikes:
          description: Available Bikes
          type: integer
        last_update:
          description: Last Update
          type: string
          example: yyyy-MM-dd HH:mm:ss
        name:
          description: name
          type: string
        position:
          description: position
          type: string
          example: latitude;longitude
        row_id:
          description: Unique technical row ID
          type: string
        status:
          description: status
          type: string
    PlaceMapData:
      type: object
      properties:
        places:
          description: Places
          type: array
          items:
            $ref: '#/components/schemas/PlaceData'
        name:
          description: Name
          type: string
    ActionResult:
      type: object
      properties:
        result:
          description: Action result
          type: string
    OdsCommunesFrance:
      type: object
      properties:
        odsComRegName:
          description: Region name
          type: string
        odsComDepName:
          description: Area name
          type: string
        odsComCoords:
          description: Geographical coordinates
          type: string
          example: latitude;longitude
        odsComComNameUpper:
          description: City name (uppercase)
          type: string
        odsComRegCode:
          description: Region code
          type: string
        odsComDepCode:
          description: Area code
          type: string
        odsComComCode:
          description: City code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        odsComComName:
          description: City name
          type: string
    ArrayOfOdsCommunesFrance:
      type: array
      items:
        $ref: '#/components/schemas/OdsCommunesFrance'
    TreeviewData:
      type: object
      properties:
        item:
          description: Object item with lists of linked objects' items
          type: object
    Error400:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 400
    Error401:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 401
    Error500:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 500
    Error403:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 403
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: Simplicite token
      scheme: bearer
      type: http
servers:
- url: /api
openapi: 3.0.2
paths:
  /rest/OdsJCDecauxBikeStations:
    get:
      summary: Search OdsJCDecauxBikeStations business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-odsjcdecauxbikestations-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfOdsJCDecauxBikeStations'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: integer
        in: query
        name: number
        description: Search filter for number
        required: false
      - schema:
          type: string
        in: query
        name: name
        description: Search filter for name
        required: false
      - schema:
          type: string
        in: query
        name: address
        description: Search filter for address
        required: false
      - schema:
          type: string
        in: query
        name: position
        description: Search filter for position
        required: false
      - schema:
          type: string
        in: query
        name: banking
        description: Search filter for banking
        required: false
      - schema:
          type: string
        in: query
        name: bonus
        description: Search filter for bonus
        required: false
      - schema:
          type: string
        in: query
        name: status
        description: Search filter for status
        required: false
      - schema:
          type: string
        in: query
        name: contract_name
        description: Search filter for Contract Name
        required: false
      - schema:
          type: integer
        in: query
        name: bike_stands
        description: Search filter for Bike Stands
        required: false
      - schema:
          type: integer
        in: query
        name: available_bike_stands
        description: Search filter for Available Bike Stands
        required: false
      - schema:
          type: integer
        in: query
        name: available_bikes
        description: Search filter for Available Bikes
        required: false
      - schema:
          type: string
        in: query
        name: last_update
        description: Search filter for Last Update
        required: false
      tags:
      - OdsJCDecauxBikeStations
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      operationId: login
      responses:
        '200':
          description: Successful login
          content:
            application/json: {}
            text/plain: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: string
          enum:
          - json
          - oauth2
          - token
        in: query
        name: _output
        description: Optional output format
        required: false
      tags:
      - session
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      operationId: logout
      responses:
        '200':
          description: Successfull logout
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      tags:
      - session
  /rest/OdsJCDecauxBikeStations/{row_id}:
    post:
      summary: Create a new OdsJCDecauxBikeStations business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OdsJCDecauxBikeStations'
      operationId: obj-odsjcdecauxbikestations-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OdsJCDecauxBikeStations'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - OdsJCDecauxBikeStations
    get:
      summary: Get a OdsJCDecauxBikeStations business object record
      security:
      - bearerAuth: []
      operationId: obj-odsjcdecauxbikestations-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OdsJCDecauxBikeStations'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - OdsJCDecauxBikeStations
    delete:
      summary: Delete a OdsJCDecauxBikeStations business object record
      security:
      - bearerAuth: []
      operationId: obj-odsjcdecauxbikestations-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - OdsJCDecauxBikeStations
    put:
      summary: Update a OdsJCDecauxBikeStations business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OdsJCDecauxBikeStations'
      operationId: obj-odsjcdecauxbikestations-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OdsJCDecauxBikeStations'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - OdsJCDecauxBikeStations
  /rest/OdsCommunesFrance:
    get:
      summary: Search OdsCommunesFrance business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-odscommunesfrance-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfOdsCommunesFrance'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: odsComComCode
        description: Search filter for City code
        required: false
      - schema:
          type: string
        in: query
        name: odsComComName
        description: Search filter for City name
        required: false
      - schema:
          type: string
        in: query
        name: odsComComNameUpper
        description: Search filter for City name (uppercase)
        required: false
      - schema:
          type: string
        in: query
        name: odsComCoords
        description: Search filter for Geographical coordinates
        required: false
      - schema:
          type: string
        in: query
        name: odsComRegCode
        description: Search filter for Region code
        required: false
      - schema:
          type: string
        in: query
        name: odsComRegName
        description: Search filter for Region name
        required: false
      - schema:
          type: string
        in: query
        name: odsComDepCode
        description: Search filter for Area code
        required: false
      - schema:
          type: string
        in: query
        name: odsComDepName
        description: Search filter for Area name
        required: false
      tags:
      - OdsCommunesFrance
  /rest/OdsCommunesFrance/{row_id}/placemap:ODSCommunesFranceMap:
    get:
      summary: Call a place map for OdsCommunesFrance business object
      security:
      - bearerAuth: []
      operationId: obj-odscommunesfrance-placemap-odscommunesfrancemap
      responses:
        '200':
          description: Success in calling the place map adat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceMapData'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - OdsCommunesFrance
  /rest/OdsCommunesFrance/{row_id}:
    post:
      summary: Create a new OdsCommunesFrance business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OdsCommunesFrance'
      operationId: obj-odscommunesfrance-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OdsCommunesFrance'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - OdsCommunesFrance
    get:
      summary: Get a OdsCommunesFrance business object record
      security:
      - bearerAuth: []
      operationId: obj-odscommunesfrance-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OdsCommunesFrance'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - OdsCommunesFrance
    delete:
      summary: Delete a OdsCommunesFrance business object record
      security:
      - bearerAuth: []
      operationId: obj-odscommunesfrance-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - OdsCommunesFrance
    put:
      summary: Update a OdsCommunesFrance business object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OdsCommunesFrance'
      operationId: obj-odscommunesfrance-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OdsCommunesFrance'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - OdsCommunesFrance
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: boolean
        in: query
        name: texts
        description: Texts?
        required: false
      tags:
      - session
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module OpenDataSoft
  title: OpenDataSoft
  version: '5'
tags:
- name: OdsCommunesFrance
  description: City of France
- name: OdsJCDecauxBikeStations
  description: JCDecaux bike station
